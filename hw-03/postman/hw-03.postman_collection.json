{
	"info": {
		"_postman_id": "f89a6cde-68a5-4d35-8576-81f8d6e08865",
		"name": "hw-03",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29101080"
	},
	"item": [
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"const location = pm.response.headers.get(\"Location\");\r",
							"const userId = location.substring(location.lastIndexOf(\"/\") + 1);\r",
							"\r",
							"//store the ID of the created user to reuse it in subsequent tests\r",
							"pm.collectionVariables.set(\"userId\", userId);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const username = pm.variables.replaceIn(\"hhertz-{{$randomAlphaNumeric}}{{$randomAlphaNumeric}}{{$randomAlphaNumeric}}{{$randomAlphaNumeric}}\");\r",
							"pm.collectionVariables.set(\"username\", username);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"{{username}}\",\r\n    \"firstName\" : \"Heinrich\",\r\n    \"lastName\" : \"Hertz\",\r\n    \"email\" : \"hertz@example.com\",\r\n    \"phone\" : \"+555123456789\"\r\n}"
				},
				"url": {
					"raw": "http://arch.homework/users",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const expectedUsername = pm.collectionVariables.get(\"username\");\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.username).to.eql(expectedUsername);\r",
							"    pm.expect(jsonData.firstName).to.eql(\"Heinrich\");\r",
							"    pm.expect(jsonData.lastName).to.eql(\"Hertz\");\r",
							"    pm.expect(jsonData.email).to.eql(\"hertz@example.com\");\r",
							"    pm.expect(jsonData.phone).to.eql(\"+555123456789\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://arch.homework/users/{{userId}}",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.sendRequest(\"http://arch.homework/users/{{userId}}\", function (err, response) {\r",
							"    pm.test(\"Body is correct\", function () {\r",
							"        const jsonData = pm.response.json();\r",
							"        const username = pm.collectionVariables.get(\"username\");\r",
							"        pm.expect(jsonData.username).to.eql(username + \"-modified\");\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"{{username}}-modified\",\r\n    \"firstName\": \"Heinrich\",\r\n    \"lastName\": \"Hertz\",\r\n    \"email\": \"hertz123@example.com\",\r\n    \"phone\": \"+555123456789\"\r\n}"
				},
				"url": {
					"raw": "http://arch.homework/users/{{userId}}",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://arch.homework/users/{{userId}}",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		}
	]
}