{
	"info": {
		"_postman_id": "e40aa66e-8596-4f68-8154-ce103f5d958f",
		"name": "hw-05",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29101080"
	},
	"item": [
		{
			"name": "logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://arch.homework/logout",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const username = pm.variables.replaceIn(\"mlomonosov-{{$randomAlphaNumeric}}{{$randomAlphaNumeric}}{{$randomAlphaNumeric}}{{$randomAlphaNumeric}}\");\r",
							"pm.collectionVariables.set(\"username\", username);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{username}}123\"\r\n}"
				},
				"url": {
					"raw": "http://arch.homework/register",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "get-profile-fail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://arch.homework/profiles/me",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"profiles",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "update-profile-fail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"first_name\": \"Mikhail\",\r\n    \"last_name\": \"Lomonosov\",\r\n    \"email\": \"mlomonosov@example.com\",\r\n    \"phone\": \"+555111222333\"\r\n}"
				},
				"url": {
					"raw": "http://arch.homework/profiles/me",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"profiles",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{username}}123\"\r\n}"
				},
				"url": {
					"raw": "http://arch.homework/login",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "update-profile-success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"first_name\": \"Mikhail\",\r\n    \"last_name\": \"Lomonosov\",\r\n    \"email\": \"mlomonosov@example.com\",\r\n    \"phone\": \"+555111222333\"\r\n}"
				},
				"url": {
					"raw": "http://arch.homework/profiles/me",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"profiles",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "get-profile-success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const expectedUsername = pm.collectionVariables.get(\"username\");\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.username).to.eql(expectedUsername);\r",
							"    pm.expect(jsonData.first_name).to.eql(\"Mikhail\");\r",
							"    pm.expect(jsonData.last_name).to.eql(\"Lomonosov\");\r",
							"    pm.expect(jsonData.email).to.eql(\"mlomonosov@example.com\");\r",
							"    pm.expect(jsonData.phone).to.eql(\"+555111222333\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://arch.homework/profiles/me",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"profiles",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://arch.homework/logout",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "register-2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const username2 = pm.variables.replaceIn(\"amarkov-{{$randomAlphaNumeric}}{{$randomAlphaNumeric}}{{$randomAlphaNumeric}}{{$randomAlphaNumeric}}\");\r",
							"pm.collectionVariables.set(\"username2\", username2);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"{{username2}}\",\r\n    \"password\": \"{{username2}}123\"\r\n}"
				},
				"url": {
					"raw": "http://arch.homework/register",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "login-2",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"{{username2}}\",\r\n    \"password\": \"{{username2}}123\"\r\n}"
				},
				"url": {
					"raw": "http://arch.homework/login",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "get-profile-2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const expectedUsername = pm.collectionVariables.get(\"username2\");\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.username).to.eql(expectedUsername);\r",
							"    pm.expect(jsonData.first_name).to.eql(undefined);\r",
							"    pm.expect(jsonData.last_name).to.eql(undefined);\r",
							"    pm.expect(jsonData.email).to.eql(undefined);\r",
							"    pm.expect(jsonData.phone).to.eql(undefined);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://arch.homework/profiles/me",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"profiles",
						"me"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "username2",
			"value": ""
		}
	]
}